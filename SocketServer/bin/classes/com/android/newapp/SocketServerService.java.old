package com.android.newapp;

import java.io.BufferedReader;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.StringTokenizer;
import android.app.Activity;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.IBinder;
import android.os.PowerManager;
import android.os.PowerManager.WakeLock;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

public class SocketServerService extends Service {
	String domain_name = "Invalid";
	String application = "Invalid";
	long allow_deny = 2;
	DataHelper db = null;
	Context c = null;
	byte[] receiveData = new byte[1024];
	byte[] sendData = new byte[1024];
	DatagramPacket receivePacket;
	DatagramSocket ss = null;
	Socket socket = null;
	BufferedReader in = null;
	long allow1 = 2;
	PowerManager mPm;
	WakeLock mWl;
	DatagramPacket sendPacket ;
	String str; 
	String delims = ":";
	InetAddress IPAddress;
	int port;
	String permission;
	
/*	@Override
	public void onCreate() {
		
		Log.e("Anup", "Created service");
		c = this;
		db = new DataHelper(c);
		try {
			ss = new DatagramSocket(5000);
			receivePacket = new DatagramPacket(receiveData,receiveData.length);

			Toast.makeText(c, "Created Socket", Toast.LENGTH_LONG).show();
		} catch (SocketException e1) {
			// TODO Auto-generated catch block
			Toast.makeText(c, "Unable to create Socket", Toast.LENGTH_LONG)
					.show();
		}
	}

	public int onStartCommand(Intent intent, int flags, int startId) {
		while (true) {
			Log.e("Anup", "Started service");
				 allow1=3;
				try{
				Log.d("Anup", "Wating for data :");
				
				Log.d("Anup", "Before recieve packet");
				ss.setSoTimeout(10000);
				Log.d("Anup", "Before recieve packet" + String.valueOf(ss.getSoTimeout()));
				ss.receive(receivePacket);
				if(receivePacket == null) continue;
				Log.d("Anup", "After recieve packet");
				}
				catch(Exception e)
				{
					Log.e("Anup","Recive Timeout in Service");
					continue;
				}
				try
				{
				Log.d("Anup", "before get datat");
				str =  new String(receivePacket.getData());
				Log.d("Anup", "recieved Data =  : " + str);
							StringTokenizer st = new StringTokenizer(str, delims);
				domain_name = st.nextToken();
				application = st.nextToken();
				allow1 = db.getAllow(domain_name, application);
				Log.d("Anup", "Allow = " + String.valueOf(allow1));
				if (allow1 == 2) {
					Toast.makeText(
							c,
							"\nDomain: " + domain_name + "\nApplicaion: "
									+ application, Toast.LENGTH_LONG).show();
//					Intent intent1 = new Intent(Intent.ACTION_VIEW);
//					Bundle b = new Bundle();
//					b.putString("domain_name", domain_name);
//					b.putString("application", application);
//					intent1.putExtras(b);
//					intent1.setClass(getApplicationContext(),
//							SocketServerActivity.class);
//					intent1.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
//					intent1.setAction("android.intent.action.MAIN");
//					intent1.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
					Log.d("Anup", "Starting the activity");
//					startActivity(intent1);
					Log.d("Anup", "Domain :" + domain_name + "\nApplication"
							+ application);
					Log.d("Anup", "Allow =  : " + String.valueOf(allow1));
		//			continue;
				} else if (allow1 == 1) {
					Log.e("Anup", "\nRequest Status : Approved");
					Toast.makeText(
							c,
							"\nDomain: " + domain_name + "\nApplicaion: "
									+ application + "Request Approved",
							Toast.LENGTH_LONG).show();
				} else if (allow1 == 0) {
					Log.e("Anup", "\nRequest Status : Denied");
					Toast.makeText(
							c,
							"\nDomain: " + domain_name + "\nApplicaion: "
									+ application + "Request Denied",
							Toast.LENGTH_LONG).show();
				}
				else
				{
					Log.e("Anup","Recive Timeout in Service");
					continue;
				}
				IPAddress = receivePacket.getAddress();
				port = receivePacket.getPort();
				permission = String.valueOf(allow1);
				sendData = permission.getBytes();
				sendPacket = new DatagramPacket(sendData,
						sendData.length, IPAddress, port);
				}
				catch(Exception e)
				{
					Log.d("Anup","Middle Zhol");
				}
				try
				{
					ss.send(sendPacket);
				}
				catch(Exception e )
				{
					Log.e("Anup","send problem");
					continue;
				}
		}

	}
*/
	public void onCreate() {
		
		Log.e("Anup", "Created service");
		c = this;
		db = new DataHelper(c);
		try {
			ss = new ServerSocket(5000);
			Toast.makeText(c, "Created Socket", Toast.LENGTH_LONG).show();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			Toast.makeText(c, "Unable to create Socket", Toast.LENGTH_LONG)
					.show();
		}
	}
	void sendMessage(String msg)
	{
		try{
			out.writeObject(msg);
			out.flush();
			System.out.println("server>" + msg);
		}
		catch(IOException ioException){
			ioException.printStackTrace();
		}
	}
	public int onStartCommand(Intent intent, int flags, int startId) {
		while (true) {
			Log.e("Anup", "Started service");
				 allow1=3;
				try{
				Log.d("Anup", "Wating for data :");
				connection = ss.accept();
				out = new ObjectOutputStream(connection.getOutputStream());
				out.flush();
				in = new ObjectInputStream(connection.getInputStream());
				str = (String) in.readObject();
				Log.d("Anup", "After recieve packet");
				}
				catch(Exception e)
				{
					Log.e("Anup","Recive Timeout in Service");
					continue;
				}
				Log.d("Anup", "before get datat");
				Log.d("Anup", "recieved Data =  : " + str);
				StringTokenizer st = new StringTokenizer(str, delims);
				domain_name = st.nextToken();
				application = st.nextToken();
				allow1 = db.getAllow(domain_name, application);
				Log.d("Anup", "Allow = " + String.valueOf(allow1));
				if (allow1 == 2) {
					Toast.makeText(
							c,
							"\nDomain: " + domain_name + "\nApplicaion: "
									+ application, Toast.LENGTH_LONG).show();
				/*	Intent intent1 = new Intent(Intent.ACTION_VIEW);
					Bundle b = new Bundle();
					b.putString("domain_name", domain_name);
					b.putString("application", application);
					intent1.putExtras(b);
					intent1.setClass(getApplicationContext(),
							SocketServerActivity.class);
					intent1.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
					intent1.setAction("android.intent.action.MAIN");
					intent1.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);
					Log.d("Anup", "Starting the activity");
					startActivity(intent1);*/
					Log.d("Anup", "Domain :" + domain_name + "\nApplication"
							+ application);
					Log.d("Anup", "Allow =  : " + String.valueOf(allow1));
					
				} else if (allow1 == 1) {
					Log.e("Anup", "\nRequest Status : Approved");
					Toast.makeText(
							c,
							"\nDomain: " + domain_name + "\nApplicaion: "
									+ application + "Request Approved",
							Toast.LENGTH_LONG).show();
				} else if (allow1 == 0) {
					Log.e("Domain-Filter", "\nRequest Status : Denied");
					Toast.makeText(
							c,
							"\nDomain: " + domain_name + "\nApplicaion: "
									+ application + "Request Denied",
							Toast.LENGTH_LONG).show();
				}
				try
				{
						sendMessage(String.valueOf(allow1));	
				}
				catch(Exception e )
				{
					Log.e("Anup","send problem");
					continue;
				}
		}

	}
	@Override
	public IBinder onBind(Intent intent) {
		return null;
	}

	@Override
	public void onDestroy() {
		super.onDestroy();
		Log.v("Domain-Filter", "Ending Server");
		c.startService(new Intent(c, SocketServerService.class));
	}
}
